apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: etcd
  namespace: demo
  annotations:
    fluxcd.io/automated: "true"
    fluxcd.io/tag.chart-image: semver:~3.0
spec:
  releaseName: etcd3
  targetNamespace: demo
  timeout: 300
  resetValues: false
  forceUpgrade: false
  chart:
    repository: https://charts.bitnami.com/bitnami
    name: etcd
    version: 3.4.7
  values:
    image:
      registry: docker.io
      repository: bitnami/etcd
      tag: 3.4.7-debian-10-r21
      pullPolicy: IfNotPresent
    volumePermissions:
      enabled: false
      image:
        registry: docker.io
        repository: bitnami/minideb
        tag: buster
        pullPolicy: Always
      resources:
        limits: {}
          cpu: 100m
          memory: 128Mi
        requests: {}
          cpu: 100m
          memory: 128Mi
    statefulset:
      replicaCount: 1
      updateStrategy: RollingUpdate
      podManagementPolicy: Parallel
    allowNoneAuthentication: true
    auth:
      rbac:
        enabled: true
      client:
        secureTransport: false
        useAutoTLS: false
        enableAuthentication: false
      peer:
        secureTransport: false
        useAutoTLS: false
        enableAuthentication: false
    securityContext:
      enabled: true
      fsGroup: 1001
      runAsUser: 1001
    clusterDomain: cluster.local
    service:
      type: ClusterIP
      port: 2379
      peerPort: 2380
      nodePorts:
        clientPort: ""
        peerPort: ""
      annotations: {}
    persistence:
      enabled: true
      annotations: {}
      accessModes:
        - ReadWriteOnce
      size: 1Gi
    resources:
      limits: {}
      #   cpu: 500m
      #   memory: 1Gi
      requests: {}
      #   cpu: 250m
      #   memory: 256Mi
    livenessProbe:
      enabled: true
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
    readinessProbe:
      enabled: true
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
    podAnnotations: {}
    affinity: {}
    nodeSelector: {}
    tolerations: []
    priorityClassName: ""
    metrics:
      enabled: false
      podAnnotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "2379"
      serviceMonitor:
        enabled: false
    startFromSnapshot:
      enabled: false
    disasterRecovery:
      enabled: false
      debug: true
      cronjob:
        schedule: "*/30 * * * *"
        historyLimit: 1
        snapshotHistoryLimit: 1
        podAnnotations: {}
      pvc:
        size: 1Gi
        storageClassName: nfs
